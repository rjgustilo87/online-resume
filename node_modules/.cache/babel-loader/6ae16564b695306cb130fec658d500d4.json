{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.nextElementSibling = exports.getName = exports.hasAttrib = exports.getAttributeValue = exports.getSiblings = exports.getParent = exports.getChildren = void 0;\n\nfunction getChildren(elem) {\n  return elem.children || null;\n}\n\nexports.getChildren = getChildren;\n\nfunction getParent(elem) {\n  return elem.parent || null;\n}\n\nexports.getParent = getParent;\n\nfunction getSiblings(elem) {\n  var parent = getParent(elem);\n  return parent ? getChildren(parent) : [elem];\n}\n\nexports.getSiblings = getSiblings;\n\nfunction getAttributeValue(elem, name) {\n  var _a;\n\n  return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n}\n\nexports.getAttributeValue = getAttributeValue;\n\nfunction hasAttrib(elem, name) {\n  return !!elem.attribs && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n}\n\nexports.hasAttrib = hasAttrib;\n/***\n * Returns the name property of an element\n *\n * @param elem The element to get the name for\n */\n\nfunction getName(elem) {\n  return elem.name;\n}\n\nexports.getName = getName;\n\nfunction nextElementSibling(elem) {\n  var node = elem.next;\n\n  while (node !== null && node.type !== \"tag\") node = node.next;\n\n  return node;\n}\n\nexports.nextElementSibling = nextElementSibling;","map":null,"metadata":{},"sourceType":"script"}